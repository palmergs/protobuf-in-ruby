// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

/*
Package bmore is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	Activity
	Firewall
	Conversation
	HttpRequest
	KeyValue
	Chat
*/
package bmore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Chat_Priority int32

const (
	// UNDEFINED = 0;
	Chat_LOW    Chat_Priority = 0
	Chat_MEDIUM Chat_Priority = 1
	Chat_HIGH   Chat_Priority = 2
)

var Chat_Priority_name = map[int32]string{
	0: "LOW",
	1: "MEDIUM",
	2: "HIGH",
}
var Chat_Priority_value = map[string]int32{
	"LOW":    0,
	"MEDIUM": 1,
	"HIGH":   2,
}

func (x Chat_Priority) String() string {
	return proto.EnumName(Chat_Priority_name, int32(x))
}
func (Chat_Priority) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

type Chat_ContentType int32

const (
	// UNDEFINED = 0;
	Chat_TEXT     Chat_ContentType = 0
	Chat_HTML     Chat_ContentType = 1
	Chat_MARKDOWN Chat_ContentType = 2
)

var Chat_ContentType_name = map[int32]string{
	0: "TEXT",
	1: "HTML",
	2: "MARKDOWN",
}
var Chat_ContentType_value = map[string]int32{
	"TEXT":     0,
	"HTML":     1,
	"MARKDOWN": 2,
}

func (x Chat_ContentType) String() string {
	return proto.EnumName(Chat_ContentType_name, int32(x))
}
func (Chat_ContentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 1} }

type Activity struct {
	SentAt        int64  `protobuf:"varint,1,opt,name=sent_at,json=sentAt" json:"sent_at,omitempty"`
	MessageNumber int32  `protobuf:"varint,2,opt,name=message_number,json=messageNumber" json:"message_number,omitempty"`
	Sender        string `protobuf:"bytes,3,opt,name=sender" json:"sender,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*Activity_Request
	//	*Activity_Chat
	Event isActivity_Event `protobuf_oneof:"event"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isActivity_Event interface {
	isActivity_Event()
}

type Activity_Request struct {
	Request *HttpRequest `protobuf:"bytes,4,opt,name=request,oneof"`
}
type Activity_Chat struct {
	Chat *Chat `protobuf:"bytes,5,opt,name=chat,oneof"`
}

func (*Activity_Request) isActivity_Event() {}
func (*Activity_Chat) isActivity_Event()    {}

func (m *Activity) GetEvent() isActivity_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Activity) GetSentAt() int64 {
	if m != nil {
		return m.SentAt
	}
	return 0
}

func (m *Activity) GetMessageNumber() int32 {
	if m != nil {
		return m.MessageNumber
	}
	return 0
}

func (m *Activity) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Activity) GetRequest() *HttpRequest {
	if x, ok := m.GetEvent().(*Activity_Request); ok {
		return x.Request
	}
	return nil
}

func (m *Activity) GetChat() *Chat {
	if x, ok := m.GetEvent().(*Activity_Chat); ok {
		return x.Chat
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Activity) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Activity_OneofMarshaler, _Activity_OneofUnmarshaler, _Activity_OneofSizer, []interface{}{
		(*Activity_Request)(nil),
		(*Activity_Chat)(nil),
	}
}

func _Activity_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Activity)
	// event
	switch x := m.Event.(type) {
	case *Activity_Request:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Request); err != nil {
			return err
		}
	case *Activity_Chat:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chat); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Activity.Event has unexpected type %T", x)
	}
	return nil
}

func _Activity_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Activity)
	switch tag {
	case 4: // event.request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HttpRequest)
		err := b.DecodeMessage(msg)
		m.Event = &Activity_Request{msg}
		return true, err
	case 5: // event.chat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Chat)
		err := b.DecodeMessage(msg)
		m.Event = &Activity_Chat{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Activity_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Activity)
	// event
	switch x := m.Event.(type) {
	case *Activity_Request:
		s := proto.Size(x.Request)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Activity_Chat:
		s := proto.Size(x.Chat)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Firewall struct {
	BlockIt bool `protobuf:"varint,1,opt,name=block_it,json=blockIt" json:"block_it,omitempty"`
}

func (m *Firewall) Reset()                    { *m = Firewall{} }
func (m *Firewall) String() string            { return proto.CompactTextString(m) }
func (*Firewall) ProtoMessage()               {}
func (*Firewall) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Firewall) GetBlockIt() bool {
	if m != nil {
		return m.BlockIt
	}
	return false
}

type Conversation struct {
	SentAt int64   `protobuf:"varint,1,opt,name=sent_at,json=sentAt" json:"sent_at,omitempty"`
	Chats  []*Chat `protobuf:"bytes,2,rep,name=chats" json:"chats,omitempty"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Conversation) GetSentAt() int64 {
	if m != nil {
		return m.SentAt
	}
	return 0
}

func (m *Conversation) GetChats() []*Chat {
	if m != nil {
		return m.Chats
	}
	return nil
}

type HttpRequest struct {
	Ip            string               `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	RequestMethod string               `protobuf:"bytes,4,opt,name=request_method,json=requestMethod" json:"request_method,omitempty"`
	Host          string               `protobuf:"bytes,5,opt,name=host" json:"host,omitempty"`
	Port          int32                `protobuf:"varint,6,opt,name=port" json:"port,omitempty"`
	Context       string               `protobuf:"bytes,7,opt,name=context" json:"context,omitempty"`
	Parameters    map[string]*KeyValue `protobuf:"bytes,8,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Headers       map[string]*KeyValue `protobuf:"bytes,9,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *HttpRequest) Reset()                    { *m = HttpRequest{} }
func (m *HttpRequest) String() string            { return proto.CompactTextString(m) }
func (*HttpRequest) ProtoMessage()               {}
func (*HttpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HttpRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *HttpRequest) GetRequestMethod() string {
	if m != nil {
		return m.RequestMethod
	}
	return ""
}

func (m *HttpRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HttpRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *HttpRequest) GetParameters() map[string]*KeyValue {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *HttpRequest) GetHeaders() map[string]*KeyValue {
	if m != nil {
		return m.Headers
	}
	return nil
}

type KeyValue struct {
	Key   string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []string `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
}

func (m *KeyValue) Reset()                    { *m = KeyValue{} }
func (m *KeyValue) String() string            { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()               {}
func (*KeyValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type Chat struct {
	Sender      string           `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Receiver    string           `protobuf:"bytes,2,opt,name=receiver" json:"receiver,omitempty"`
	Text        string           `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	Priority    Chat_Priority    `protobuf:"varint,5,opt,name=priority,enum=bmore.Chat_Priority" json:"priority,omitempty"`
	ContentType Chat_ContentType `protobuf:"varint,6,opt,name=content_type,json=contentType,enum=bmore.Chat_ContentType" json:"content_type,omitempty"`
}

func (m *Chat) Reset()                    { *m = Chat{} }
func (m *Chat) String() string            { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()               {}
func (*Chat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Chat) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Chat) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *Chat) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Chat) GetPriority() Chat_Priority {
	if m != nil {
		return m.Priority
	}
	return Chat_LOW
}

func (m *Chat) GetContentType() Chat_ContentType {
	if m != nil {
		return m.ContentType
	}
	return Chat_TEXT
}

func init() {
	proto.RegisterType((*Activity)(nil), "bmore.Activity")
	proto.RegisterType((*Firewall)(nil), "bmore.Firewall")
	proto.RegisterType((*Conversation)(nil), "bmore.Conversation")
	proto.RegisterType((*HttpRequest)(nil), "bmore.HttpRequest")
	proto.RegisterType((*KeyValue)(nil), "bmore.KeyValue")
	proto.RegisterType((*Chat)(nil), "bmore.Chat")
	proto.RegisterEnum("bmore.Chat_Priority", Chat_Priority_name, Chat_Priority_value)
	proto.RegisterEnum("bmore.Chat_ContentType", Chat_ContentType_name, Chat_ContentType_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcf, 0x6e, 0xda, 0x4e,
	0x10, 0x8e, 0x6d, 0x8c, 0xed, 0x31, 0x21, 0xd6, 0x2a, 0xfa, 0xc5, 0xbf, 0x5c, 0x4a, 0x2c, 0x45,
	0xa2, 0x17, 0xb7, 0xa2, 0x97, 0x36, 0x37, 0x42, 0x68, 0xa1, 0x04, 0x12, 0xad, 0x68, 0xd3, 0x1b,
	0x32, 0x66, 0x54, 0xac, 0x80, 0xed, 0xae, 0x17, 0x5a, 0xbf, 0x49, 0xcf, 0x7d, 0x90, 0x3e, 0x5b,
	0xb5, 0x6b, 0x43, 0xdc, 0x34, 0x3d, 0xf5, 0x36, 0x33, 0xdf, 0x37, 0xdf, 0xec, 0xfc, 0xb1, 0xa1,
	0xb9, 0xc6, 0x2c, 0x0b, 0x3e, 0x63, 0xe6, 0xa7, 0x2c, 0xe1, 0x09, 0xd1, 0xe7, 0xeb, 0x84, 0xa1,
	0xf7, 0x53, 0x01, 0xb3, 0x1b, 0xf2, 0x68, 0x1b, 0xf1, 0x9c, 0x9c, 0x80, 0x91, 0x61, 0xcc, 0x67,
	0x01, 0x77, 0x95, 0x96, 0xd2, 0xd6, 0x68, 0x5d, 0xb8, 0x5d, 0x4e, 0xce, 0xf7, 0xe9, 0xb3, 0x78,
	0xb3, 0x9e, 0x23, 0x73, 0xd5, 0x96, 0xd2, 0xd6, 0xe9, 0x61, 0x19, 0x9d, 0xc8, 0x20, 0xf9, 0x0f,
	0x44, 0xc2, 0x02, 0x99, 0xab, 0xb5, 0x94, 0xb6, 0x45, 0x4b, 0x8f, 0xf8, 0x60, 0x30, 0xfc, 0xb2,
	0xc1, 0x8c, 0xbb, 0xb5, 0x96, 0xd2, 0xb6, 0x3b, 0xc4, 0x97, 0xd5, 0xfd, 0x01, 0xe7, 0x29, 0x2d,
	0x90, 0xc1, 0x01, 0xdd, 0x91, 0xc8, 0x19, 0xd4, 0xc2, 0x65, 0xc0, 0x5d, 0x5d, 0x92, 0xed, 0x92,
	0xdc, 0x5b, 0x06, 0x82, 0x25, 0xa1, 0x4b, 0x03, 0x74, 0xdc, 0x62, 0xcc, 0xbd, 0x73, 0x30, 0xdf,
	0x46, 0x0c, 0xbf, 0x06, 0xab, 0x15, 0xf9, 0x1f, 0xcc, 0xf9, 0x2a, 0x09, 0xef, 0x67, 0x51, 0xd1,
	0x80, 0x49, 0x0d, 0xe9, 0x0f, 0xb9, 0xf7, 0x1e, 0x1a, 0xbd, 0x24, 0xde, 0x22, 0xcb, 0x02, 0x1e,
	0x25, 0xf1, 0xdf, 0x5b, 0x3d, 0x03, 0x5d, 0x14, 0xc8, 0x5c, 0xb5, 0xa5, 0x3d, 0x2a, 0x4e, 0x0b,
	0xc4, 0xfb, 0xa1, 0x81, 0x5d, 0x79, 0x39, 0x69, 0x82, 0x1a, 0xa5, 0x65, 0xcb, 0x6a, 0x94, 0x8a,
	0x69, 0x95, 0x9d, 0xcc, 0xd6, 0xc8, 0x97, 0xc9, 0x42, 0x76, 0x6d, 0xd1, 0xc3, 0x32, 0x3a, 0x96,
	0x41, 0x42, 0xa0, 0xb6, 0x4c, 0xb2, 0xa2, 0x4b, 0x8b, 0x4a, 0x5b, 0xc4, 0xd2, 0x84, 0x71, 0xb7,
	0x2e, 0xc7, 0x2b, 0x6d, 0xe2, 0x82, 0x11, 0x26, 0x31, 0xc7, 0x6f, 0xdc, 0x35, 0x24, 0x75, 0xe7,
	0x92, 0x4b, 0x80, 0x34, 0x60, 0xc1, 0x1a, 0x39, 0xb2, 0xcc, 0x35, 0xe5, 0x83, 0xbd, 0x3f, 0x47,
	0xeb, 0xdf, 0xee, 0x49, 0xfd, 0x98, 0xb3, 0x9c, 0x56, 0xb2, 0xc8, 0x1b, 0x30, 0x96, 0x18, 0x2c,
	0x84, 0x80, 0x25, 0x05, 0x9e, 0x3d, 0x21, 0x30, 0x28, 0x18, 0x45, 0xf6, 0x8e, 0x7f, 0x3a, 0x81,
	0xa3, 0x47, 0xca, 0xc4, 0x01, 0xed, 0x1e, 0x73, 0x39, 0x52, 0x8b, 0x0a, 0x93, 0x9c, 0x83, 0xbe,
	0x0d, 0x56, 0x1b, 0x94, 0x17, 0x63, 0x77, 0x8e, 0x4a, 0xf5, 0x11, 0xe6, 0x1f, 0x45, 0x98, 0x16,
	0xe8, 0x85, 0xfa, 0x5a, 0x39, 0x1d, 0x41, 0xa3, 0x5a, 0xe8, 0x9f, 0xc4, 0xbc, 0x0e, 0x98, 0xbb,
	0xf0, 0x13, 0x42, 0xc7, 0x0f, 0x42, 0x5a, 0xdb, 0x2a, 0xf3, 0xbc, 0xef, 0x2a, 0xd4, 0xc4, 0xa2,
	0x2b, 0x87, 0xac, 0xfc, 0x76, 0xc8, 0xa7, 0x60, 0x32, 0x0c, 0x31, 0xda, 0x96, 0x5f, 0x80, 0x45,
	0xf7, 0xbe, 0x58, 0x9d, 0xdc, 0x51, 0x71, 0x07, 0xd2, 0x26, 0x2f, 0xc1, 0x4c, 0x59, 0x94, 0xb0,
	0x88, 0xe7, 0x72, 0xcd, 0xcd, 0xce, 0x71, 0xe5, 0x9e, 0xfc, 0xdb, 0x12, 0xa3, 0x7b, 0x16, 0xb9,
	0x80, 0x86, 0xdc, 0x6e, 0xcc, 0x67, 0x3c, 0x4f, 0x51, 0x1e, 0x42, 0xb3, 0x73, 0x52, 0xcd, 0xea,
	0x15, 0xf8, 0x34, 0x4f, 0x91, 0xda, 0xe1, 0x83, 0xe3, 0x3d, 0x07, 0x73, 0xa7, 0x48, 0x0c, 0xd0,
	0xae, 0x6f, 0xee, 0x9c, 0x03, 0x02, 0x50, 0x1f, 0xf7, 0xaf, 0x86, 0x1f, 0xc6, 0x8e, 0x42, 0x4c,
	0xa8, 0x0d, 0x86, 0xef, 0x06, 0x8e, 0xea, 0xbd, 0x00, 0xbb, 0x22, 0x23, 0x80, 0x69, 0xff, 0xd3,
	0xd4, 0x39, 0x90, 0x94, 0xe9, 0xf8, 0xda, 0x51, 0x48, 0x03, 0xcc, 0x71, 0x97, 0x8e, 0xae, 0x6e,
	0xee, 0x26, 0x8e, 0x3a, 0xaf, 0xcb, 0xbf, 0xc6, 0xab, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7f,
	0x1d, 0xb8, 0xad, 0x47, 0x04, 0x00, 0x00,
}
